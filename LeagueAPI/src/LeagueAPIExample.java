import java.util.ArrayList;
import java.util.Map;

import classes.Champion;
import classes.ChampionList;
import classes.Game;
import classes.League;
import classes.MasteryPage;
import classes.MasteryPages;
import classes.RawStat;
import classes.RecentGames;
import classes.RunePage;
import classes.RunePages;
import classes.Summoner;
import classes.Team;


public class LeagueAPIExample {

        public static void main(String[] args) {

                // Retrieve a LeagueAPI object with your api key for a specific server
                LeagueAPI api = new LeagueAPI("5fb6a70f-d3d7-4ee1-8285-c73e49dd4777", LeagueAPI.Region.NA);

                // Request a summoner object generated by the Java LoL API Wrapper with
                // a given ingame name
                Summoner summoner = api.getSummoner("Omniforce");
                
                // make sure that the summoner exists
                if(summoner == null)
                        return;

                // Print out some stuff
                if (summoner != null) {
                        System.out.println(summoner.getId());
                        System.out.println(summoner.getSummonerLevel());
                        System.out.println(summoner.getRevisionDateStr());
                        System.out.println();
                }
                
                // Get recent games of summoner
                RecentGames recentGames = api.getRecentGames(summoner.getId());

                // Print information of recent games
                if (recentGames != null)
                        for (Game game : recentGames.getGames()) {
                                System.out.println(game.getGameType() + " " + game.getSubType());
                                System.out.println("-----------------");
                                for (RawStat rawStat : game.getStatistics()) {
                                        System.out.println(rawStat.getName() + " - " + rawStat.getValue());
                                }
                                System.out.println();
                        }

                // Leagues
                Map<String, League> leagues = api.getLeagues(summoner.getId());
                if (leagues != null)
                        System.out.println(leagues.keySet().toString());

                // Test ChampionList
                ChampionList championList = api.getChampionList();
                for (Champion champ : championList.getChampions()) {
                        System.out.println(champ.getName());
                }
                System.out.println();

                // Test Teams
                ArrayList<Team> teams = api.getTeams(summoner.getId());
                if (teams != null)
                        for (Team team : teams) {
                                System.out.println(team.getName());
                        }
                System.out.println();
                
                // Test Runes
                RunePages runePages = api.getRunePages(summoner.getId());
                if (runePages != null)
                        for (RunePage runePage : runePages.getPages()) {
                                System.out.println(runePage.getName());
                        }
                System.out.println();

                // Test Masteries
                MasteryPages masteryPages = api.getMasteryPages(summoner.getId());
                if (masteryPages != null)
                        for (MasteryPage masteryPage : masteryPages.getPages()) {
                                System.out.println(masteryPage.getName());
                        }
        }
}